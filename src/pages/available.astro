---
import Layout from '../layouts/Layout.astro';
import { siteConfig } from '../data/site';
---

<Layout title={`Available Properties - ${siteConfig.name}`}>
	<section class="hero section">
		<div class="container">
			<h1 class="section-title">Available Properties</h1>
			<p class="section-subtitle">Explore our available lots and properties across Connecticut</p>
		</div>
	</section>

	<section class="map-section section">
		<div class="container">
			<div class="map-container">
				<div id="map" class="google-map"></div>
			</div>
		</div>
	</section>

	<section class="properties-section section">
		<div class="container">
			<h2 class="section-title">Available Locations</h2>
			<div class="properties-grid">
				<div class="property-item" data-location="0">
					<div class="property-info">
						<h3>36 Loomis Ave</h3>
						<p class="property-address">Plainville, CT</p>
						<p class="property-details">Residential lot • Prime location • Ready for development</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="0">View on Map</button>
				</div>

				<div class="property-item" data-location="1">
					<div class="property-info">
						<h3>76 Maple Rd</h3>
						<p class="property-address">Portland, CT</p>
						<p class="property-details">Residential property • Scenic location • Development ready</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="1">View on Map</button>
				</div>

				<div class="property-item" data-location="2">
					<div class="property-info">
						<h3>123 Corbin Ridge</h3>
						<p class="property-address">Bristol, CT</p>
						<p class="property-details">Residential lot • Ridge location • Beautiful views</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="2">View on Map</button>
				</div>

				<div class="property-item" data-location="3">
					<div class="property-info">
						<h3>275 Silo Rd</h3>
						<p class="property-address">Bristol, CT</p>
						<p class="property-details">Residential property • Rural setting • Spacious lot</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="3">View on Map</button>
				</div>

				<div class="property-item" data-location="4">
					<div class="property-info">
						<h3>1617 Mount Vernon Rd</h3>
						<p class="property-address">Southington, CT</p>
						<p class="property-details">Residential lot • Established neighborhood • Great location</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="4">View on Map</button>
				</div>

				<div class="property-item" data-location="5">
					<div class="property-info">
						<h3>2581 Albany Ave</h3>
						<p class="property-address">West Hartford, CT</p>
						<p class="property-details">Commercial opportunity • High traffic area • Prime location</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="5">View on Map</button>
				</div>

				<div class="property-item" data-location="6">
					<div class="property-info">
						<h3>Marion Ave</h3>
						<p class="property-address">Southington, CT</p>
						<p class="property-details">Residential opportunity • Quiet street • Family neighborhood</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="6">View on Map</button>
				</div>

				<div class="property-item" data-location="7">
					<div class="property-info">
						<h3>Overlook Dr</h3>
						<p class="property-address">Plainville, CT</p>
						<p class="property-details">Residential lot • Scenic views • Premium location</p>
						<div class="property-price">Contact for pricing</div>
					</div>
					<button class="view-btn" data-location="7">View on Map</button>
				</div>
			</div>
		</div>
	</section>


</Layout>

<style>
	.hero {
		background: #f8f9fa;
		color: #101820;
		text-align: center;
		padding: 6rem 0 4rem;
		position: relative;
		border-bottom: 1px solid #e9ecef;
	}

	.hero .section-title {
		font-size: 3.5rem;
		font-weight: 500;
		margin-bottom: 1rem;
		line-height: 1.2;
		color: #101820;
		position: relative;
	}

	.hero .section-subtitle {
		font-size: 1.3rem;
		opacity: 0.8;
		color: #6c757d;
		font-weight: 500;
	}

	.hero .section-title::after {
		content: '';
		position: absolute;
		bottom: -15px;
		left: 50%;
		transform: translateX(-50%);
		width: 80px;
		height: 4px;
		background: #84754e;
	}

	.map-section {
		padding: 4rem 0 0 0;
	}

	.map-container {
		background: white;
		overflow: hidden;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
	}

	.google-map {
		width: 100%;
		height: 600px;
	}

	.properties-section {
		background: white;
		padding: 6rem 0;
	}

	.properties-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
		margin-top: 3rem;
	}

	.property-item {
		border: 2px solid #e2e8f0;
		border-radius: 12px;
		padding: 1.5rem;
		transition: all 0.3s ease;
		cursor: pointer;
	}

	.property-item:hover {
		border-color: #84754e;
		transform: translateY(-2px);
		box-shadow: 0 5px 15px rgba(132, 117, 78, 0.1);
	}

	.property-item.active {
		border-color: #84754e;
		background: rgba(132, 117, 78, 0.05);
	}

	.property-info h3 {
		font-size: 1.1rem;
		font-weight: 500;
		color: #1a1a1a;
		margin-bottom: 0.5rem;
	}

	.property-address {
		color: #84754e;
		font-weight: 500;
		margin-bottom: 0.5rem;
		font-size: 0.9rem;
	}

	.property-details {
		color: #4a5568;
		font-size: 0.85rem;
		margin-bottom: 1rem;
		line-height: 1.4;
	}

	.property-price {
		font-size: 1.25rem;
		font-weight: 500;
		color: #2d3748;
		margin-bottom: 1rem;
	}

	.view-btn {
		background: #84754e;
		color: white;
		border: none;
		padding: 0.75rem 1.5rem;
		border-radius: 0;
		font-size: 0.9rem;
		font-weight: 600;
		cursor: pointer;
		transition: all 0.3s ease;
		width: 100%;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.view-btn:hover {
		transform: translateY(-1px);
		box-shadow: 0 5px 15px rgba(132, 117, 78, 0.3);
	}

	.info-section {
		background: white;
		padding: 6rem 0;
	}

	.info-content h2 {
		font-size: 2.5rem;
		font-weight: 500;
		color: #1a1a1a;
		text-align: center;
		margin-bottom: 3rem;
	}

	.features-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 2rem;
		max-width: 1200px;
		margin: 0 auto;
	}

	.feature {
		text-align: center;
		padding: 2rem;
		background: #f8f9fa;
		border-radius: 15px;
		transition: transform 0.3s ease;
	}

	.feature:hover {
		transform: translateY(-5px);
	}

	.feature-icon {
		font-size: 3rem;
		margin-bottom: 1rem;
	}

	.feature h3 {
		font-size: 1.25rem;
		font-weight: 600;
		color: #1a1a1a;
		margin-bottom: 1rem;
	}

	.feature p {
		color: #4a5568;
		line-height: 1.6;
	}

	@media (max-width: 768px) {
		.hero .section-title {
			font-size: 2.5rem;
		}

		.hero .section-subtitle {
			font-size: 1.1rem;
		}

		.google-map {
			height: 400px;
		}

		.properties-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.property-item {
			padding: 1.25rem;
		}
	}
</style>

<script>
	// Google Maps API Key
	const GOOGLE_MAPS_API_KEY = 'AIzaSyCBVHEO0SiHLqVGwwLWcgJYD70OQ9lXg68';

	// Connecticut property locations
	const locations = [
		{
			position: { lat: 41.6745, lng: -72.8642 }, // 36 Loomis Ave, Plainville (approximate)
			title: '36 Loomis Ave',
			address: 'Plainville, CT',
			details: 'Residential lot • Prime location • Ready for development',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/36-Loomis-Ave-Plainville-CT-06062/456191538_zpid/'
		},
		{
			position: { lat: 41.57519, lng: -72.575116 }, // 76 Maple Rd, Portland
			title: '76 Maple Rd',
			address: 'Portland, CT',
			details: 'Residential property • Scenic location • Development ready',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/76-Maple-Rd-Portland-CT-06480/123859914_zpid/'
		},
		{
			position: { lat: 41.64897, lng: -72.97761 }, // 123 Corbin Ridge, Bristol
			title: '123 Corbin Ridge',
			address: 'Bristol, CT',
			details: 'Residential lot • Ridge location • Beautiful views',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/123-Corbin-Rdg-Bristol-CT-06010/299800130_zpid/'
		},
		{
			position: { lat: 41.649445, lng: -72.893190 }, // 275 Silo Rd, Bristol
			title: '275 Silo Rd',
			address: 'Bristol, CT',
			details: 'Residential property • Rural setting • Spacious lot',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/275-Silo-Rd-Bristol-CT-06010/124133370_zpid/'
		},
		{
			position: { lat: 41.67491, lng: -72.92147 }, // 1617 Mount Vernon Rd, Southington
			title: '1617 Mount Vernon Rd',
			address: 'Southington, CT',
			details: 'Residential lot • Established neighborhood • Great location',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/1617-Mount-Vernon-Rd-Southington-CT-06489/241203895_zpid/'
		},
		{
			position: { lat: 41.76208, lng: -72.74201 }, // 2581 Albany Ave, West Hartford
			title: '2581 Albany Ave',
			address: 'West Hartford, CT',
			details: 'Commercial opportunity • High traffic area • Prime location',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/2581-Albany-Ave-West-Hartford-CT-06117/111439266_zpid/'
		},
		{
			position: { lat: 41.56806, lng: -72.92472 }, // Marion Ave, Southington
			title: 'Marion Ave',
			address: 'Southington, CT',
			details: 'Residential opportunity • Quiet street • Family neighborhood',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/marion-southington-ct/houses/'
		},
		{
			position: { lat: 41.6745, lng: -72.8642 }, // Overlook Dr, Plainville (approximate)
			title: 'Overlook Dr',
			address: 'Plainville, CT',
			details: 'Residential lot • Scenic views • Premium location',
			price: 'Contact for pricing',
			zillowLink: 'https://www.zillow.com/homedetails/0-Overlook-Dr-LOT-3-Plainville-CT-06062/352655110_zpid/'
		}
	];

	let map: any;
	let markers: any[] = [];
	let infoWindows: any[] = [];

	// Initialize the map
	function initMap(): void {
		// Center map on the new property locations
		const center = { lat: 41.65, lng: -72.85 };

		map = new (window as any).google.maps.Map(document.getElementById('map') as HTMLElement, {
			zoom: 10,
			center: center,
			styles: [
				{
					featureType: 'poi',
					elementType: 'labels',
					stylers: [{ visibility: 'off' }]
				}
			]
		});

		// Add markers for each location
		locations.forEach((location, index) => {
			const marker = new (window as any).google.maps.Marker({
				position: location.position,
				map: map,
				title: location.title,
				icon: {
					url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`
						<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
							<circle cx="20" cy="20" r="18" fill="#84754e" stroke="white" stroke-width="2"/>
							<text x="20" y="25" text-anchor="middle" fill="white" font-family="Arial" font-size="12" font-weight="bold">${index + 1}</text>
						</svg>
					`),
					scaledSize: new (window as any).google.maps.Size(40, 40),
					anchor: new (window as any).google.maps.Point(20, 20)
				}
			});

			const infoWindow = new (window as any).google.maps.InfoWindow({
				content: `
					<div style="padding: 10px; max-width: 250px;">
						<h3 style="margin: 0 0 8px 0; color: #1a1a1a; font-size: 16px;">${location.title}</h3>
						<p style="margin: 0 0 5px 0; color: #84754e; font-weight: 500; font-size: 14px;">${location.address}</p>
						<p style="margin: 0 0 8px 0; color: #4a5568; font-size: 12px; line-height: 1.4;">${location.details}</p>
						<div style="font-size: 18px; font-weight: 500; color: #2d3748; margin-bottom: 10px;">${location.price}</div>
						<a href="${location.zillowLink}" target="_blank" style="display: inline-block; background: #84754e; color: white; text-decoration: none; padding: 6px 12px; border-radius: 4px; font-size: 12px; font-weight: 500;">View on Zillow</a>
					</div>
				`
			});

			marker.addListener('click', () => {
				// Close all other info windows
				infoWindows.forEach(window => window.close());
				// Open this info window
				infoWindow.open(map, marker);
				// Highlight corresponding property item
				highlightPropertyItem(index);
			});

			markers.push(marker);
			infoWindows.push(infoWindow);
		});
	}

	// Highlight property item in sidebar
	function highlightPropertyItem(index: number): void {
		// Remove active class from all items
		document.querySelectorAll('.property-item').forEach(item => {
			item.classList.remove('active');
		});
		// Add active class to selected item
		const selectedItem = document.querySelector(`[data-location="${index}"]`);
		if (selectedItem) {
			selectedItem.classList.add('active');
		}
	}

	// Handle view button clicks
	function handleViewButtonClick(index: number): void {
		// Close all info windows
		infoWindows.forEach(window => window.close());
		// Open info window for selected location
		infoWindows[index].open(map, markers[index]);
		// Pan to marker
		map.panTo(locations[index].position);
		map.setZoom(13);
		// Highlight property item
		highlightPropertyItem(index);
	}

	// Initialize when DOM is loaded
	document.addEventListener('DOMContentLoaded', () => {
		// Add click listeners to view buttons
		document.querySelectorAll('.view-btn').forEach((button, index) => {
			button.addEventListener('click', () => handleViewButtonClick(index));
		});

		// Add click listeners to property items
		document.querySelectorAll('.property-item').forEach((item, index) => {
			item.addEventListener('click', () => handleViewButtonClick(index));
		});
	});

	// Make initMap globally available
	(window as any).initMap = initMap;

	// Load Google Maps API
	function loadGoogleMapsAPI(): void {
		const script = document.createElement('script');
		script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap&loading=async`;
		script.async = true;
		script.defer = true;
		document.head.appendChild(script);
	}

	// Load the API when the page loads
	loadGoogleMapsAPI();

	// Handle client-side navigation
	document.addEventListener('astro:page-load', () => {
		// Re-initialize map if it doesn't exist or is not properly loaded
		if (!map || !document.getElementById('map')) {
			setTimeout(() => {
				if (document.getElementById('map')) {
					initMap();
				}
			}, 100);
		} else {
			// Trigger resize event to fix map display
			if ((window as any).google && (window as any).google.maps) {
				(window as any).google.maps.event.trigger(map, 'resize');
			}
		}
	});
</script> 