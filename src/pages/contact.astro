---
import Layout from '../layouts/Layout.astro';
import { siteConfig } from '../data/site';
---

<Layout title={`Contact Us - ${siteConfig.name}`}>
	<section class="hero section">
		<div class="container">
			<h1 class="section-title">Contact Us</h1>
			<p class="section-subtitle">Get in touch to discuss your project or ask any questions</p>
		</div>
	</section>

	<section class="contact-content section">
		<div class="container">
			<div class="contact-grid">
				<div class="contact-form-container">
					<h2>Send Us a Message</h2>
					<form class="contact-form" id="contactForm">
						<div class="form-row">
							<div class="form-group">
								<label for="firstName">First Name *</label>
								<input type="text" id="firstName" name="firstName" required>
							</div>
							<div class="form-group">
								<label for="lastName">Last Name *</label>
								<input type="text" id="lastName" name="lastName" required>
							</div>
						</div>
						<div class="form-group">
							<label for="email">Email Address *</label>
							<input type="email" id="email" name="email" required>
						</div>
						<div class="form-group">
							<label for="phone">Phone Number</label>
							<input type="tel" id="phone" name="phone">
						</div>
						<div class="form-group">
							<label for="service">Service Interest</label>
							<select id="service" name="service">
								<option value="">Select a service</option>
								<option value="design">Interior Design</option>
								<option value="renovation">Renovation</option>
								<option value="landscaping">Landscaping</option>
								<option value="financing">Financing</option>
								<option value="other">Other</option>
							</select>
						</div>
						<div class="form-group">
							<label for="budget">Budget Range</label>
							<select id="budget" name="budget">
								<option value="">Select budget range</option>
								<option value="under-25k">Under $25,000</option>
								<option value="25k-50k">$25,000 - $50,000</option>
								<option value="50k-100k">$50,000 - $100,000</option>
								<option value="over-100k">Over $100,000</option>
							</select>
						</div>
						<div class="form-group">
							<label for="message">Message *</label>
							<textarea id="message" name="message" rows="5" required placeholder="Tell us about your project..."></textarea>
						</div>
						<button type="submit" class="btn btn-submit">Send Message</button>
					</form>
				</div>

				<div class="contact-info">
					<h2>Get in Touch</h2>
					<div class="info-item">
						<div class="info-icon">üìß</div>
						<div class="info-content">
							<h3>Email</h3>
							<a href={`mailto:${siteConfig.contact.email}`}>{siteConfig.contact.email}</a>
						</div>
					</div>
					<div class="info-item">
						<div class="info-icon">üìû</div>
						<div class="info-content">
							<h3>Phone</h3>
							<a href={`tel:${siteConfig.contact.phone}`}>{siteConfig.contact.phone}</a>
						</div>
					</div>
					<div class="info-item">
						<div class="info-icon">üìç</div>
						<div class="info-content">
							<h3>Address</h3>
							<p>{siteConfig.contact.address}</p>
						</div>
					</div>
					<div class="info-item">
						<div class="info-icon">üïí</div>
						<div class="info-content">
							<h3>Business Hours</h3>
							<p>Monday - Friday: 9:00 AM - 6:00 PM<br>
							Saturday: 10:00 AM - 4:00 PM<br>
							Sunday: Closed</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<section class="map-section section">
		<div class="container">
			<h2 class="section-title">Find Us</h2>
			<div class="map-container">
				<div id="map" class="google-map"></div>
			</div>
		</div>
	</section>
</Layout>

<style>
	.hero {
		background: #f8f9fa;
		color: #101820;
		text-align: center;
		position: relative;
		padding: 6rem 0 4rem;
		border-bottom: 1px solid #e9ecef;
	}

	.hero .section-title {
		font-size: 3.5rem;
		font-weight: 500;
		margin-bottom: 1rem;
		line-height: 1.2;
		color: #101820;
		position: relative;
	}

	.hero .section-subtitle {
		font-size: 1.3rem;
		opacity: 0.8;
		color: #6c757d;
		font-weight: 500;
	}

	.hero .section-title::after {
		content: '';
		position: absolute;
		bottom: -15px;
		left: 50%;
		transform: translateX(-50%);
		width: 80px;
		height: 4px;
		background: #84754e;
	}

	.contact-grid {
		display: grid;
		grid-template-columns: 2fr 1fr;
		gap: 4rem;
		margin-top: 3rem;
	}

	.contact-form-container h2,
	.contact-info h2 {
		font-size: 2rem;
		margin-bottom: 2rem;
		color: #333;
	}

	.contact-form {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 1rem;
	}

	.form-group {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.form-group label {
		font-weight: 600;
		color: #333;
	}

	.form-group input,
	.form-group select,
	.form-group textarea {
		padding: 0.75rem;
		border: 1px solid #ddd;
		border-radius: 5px;
		font-size: 1rem;
		transition: border-color 0.3s ease;
	}

	.form-group input:focus,
	.form-group select:focus,
	.form-group textarea:focus {
		outline: none;
		border-color: #84754e;
	}

	.form-group textarea {
		resize: vertical;
		min-height: 120px;
	}

	.btn-submit {
		background: #84754e;
		color: white;
		padding: 1rem 2rem;
		border: none;
		border-radius: 5px;
		font-size: 1.1rem;
		font-weight: 600;
		cursor: pointer;
		transition: background 0.3s ease;
	}

	.btn-submit:hover {
		background: #6b6140;
	}

	.contact-info {
		background: #f8f9fa;
		padding: 2rem;
		border-radius: 15px;
		height: fit-content;
	}

	.info-item {
		display: flex;
		align-items: flex-start;
		gap: 1rem;
		margin-bottom: 2rem;
	}

	.info-icon {
		font-size: 1.5rem;
		margin-top: 0.25rem;
	}

	.info-content h3 {
		font-size: 1.1rem;
		margin-bottom: 0.5rem;
		color: #333;
	}

	.info-content a {
		color: #84754e;
		text-decoration: none;
		transition: color 0.3s ease;
	}

	.info-content a:hover {
		color: #6b6140;
	}

	.info-content p {
		color: #666;
		line-height: 1.6;
		margin: 0;
	}



	@media (max-width: 768px) {
		.contact-grid {
			grid-template-columns: 1fr;
			gap: 2rem;
		}

		.form-row {
			grid-template-columns: 1fr;
		}

		.contact-form-container h2,
		.contact-info h2 {
			font-size: 1.5rem;
		}


	}

	.map-section {
		background: white;
		padding: 6rem 0;
	}

	.map-container {
		background: white;
		overflow: hidden;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
		border-radius: 12px;
	}

	.google-map {
		width: 100%;
		height: 500px;
	}
</style>

<script>
	// Google Maps API Key
	const GOOGLE_MAPS_API_KEY = 'AIzaSyCBVHEO0SiHLqVGwwLWcgJYD70OQ9lXg68';

	// Contact location
	const contactLocation = {
		position: { lat: 41.662021056238395, lng: -72.86998926479343 },
		title: 'Silvin Homes',
		address: '143 Whiting St, Plainville, CT',
		details: 'Our office location'
	};

	let map: any;
	let marker: any;
	let infoWindow: any;

	// Initialize Google Map
	function initMap(): void {
		if (!document.getElementById('map')) return;

		map = new (window as any).google.maps.Map(document.getElementById('map'), {
			center: contactLocation.position,
			zoom: 15,
			styles: [
				{
					featureType: 'poi',
					elementType: 'labels',
					stylers: [{ visibility: 'off' }]
				}
			]
		});

		// Create marker
		marker = new (window as any).google.maps.Marker({
			position: contactLocation.position,
			map: map,
			title: contactLocation.title,
			icon: {
				path: (window as any).google.maps.SymbolPath.CIRCLE,
				scale: 10,
				fillColor: '#84754e',
				fillOpacity: 1,
				strokeColor: '#ffffff',
				strokeWeight: 2
			}
		});

		// Create info window
		infoWindow = new (window as any).google.maps.InfoWindow({
			content: `
				<div style="padding: 10px; max-width: 250px;">
					<h3 style="margin: 0 0 8px 0; color: #1a1a1a; font-size: 16px;">${contactLocation.title}</h3>
					<p style="margin: 0 0 5px 0; color: #84754e; font-weight: 500; font-size: 14px;">${contactLocation.address}</p>
					<p style="margin: 0 0 8px 0; color: #4a5568; font-size: 12px; line-height: 1.4;">${contactLocation.details}</p>
				</div>
			`
		});

		// Add click listener to marker
		marker.addListener('click', () => {
			infoWindow.open(map, marker);
		});

		// Open info window by default
		infoWindow.open(map, marker);
	}

	// Initialize when DOM is loaded
	document.addEventListener('DOMContentLoaded', () => {
		// Load Google Maps API
		const script = document.createElement('script');
		script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap&loading=async`;
		script.async = true;
		script.defer = true;
		document.head.appendChild(script);
	});

	// Make initMap globally available
	(window as any).initMap = initMap;

	// Handle client-side navigation
	document.addEventListener('astro:page-load', () => {
		// Re-initialize map if it doesn't exist or is not properly loaded
		if (!map || !document.getElementById('map')) {
			setTimeout(() => {
				if (document.getElementById('map')) {
					initMap();
				}
			}, 100);
		} else {
			// Trigger resize event to fix map display
			if ((window as any).google && (window as any).google.maps) {
				(window as any).google.maps.event.trigger(map, 'resize');
			}
		}
	});
</script>

<script>
	// Form submission handling
	document.addEventListener('DOMContentLoaded', () => {
		const form = document.getElementById('contactForm') as HTMLFormElement | null;
		
		if (form) {
			form.addEventListener('submit', (e) => {
				e.preventDefault();
				
				// Get form data
				const formData = new FormData(form);
				const data = Object.fromEntries(formData);
				
				// Here you would typically send the data to your backend
				console.log('Form submitted:', data);
				
				// Show success message (you can customize this)
				alert('Thank you for your message! We will get back to you soon.');
				
				// Reset form
				form.reset();
			});
		}
	});
</script> 